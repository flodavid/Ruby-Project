== README

( "require rails_helper" au lieu de "require spec_helper" dans les fichiers de tests ???)
("RSpec.describe "LayoutLinks", type: :request do" au début des fichiers test ???)

Things you may want to cover:

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...

## Chapitre 1 :
### Versions :
+ ruby 2.2.3p173 (2015-08-18 revision 51636) [x86_64-linux] et [x64-mingw32]
+ rake	10.5.0
+ rails	4.2.5.1
+ rspec	3.4.2
+ blueprint : v1.0.1-8
+ bootstrap

## Chapitre 3 :
	Les tests correspondent à une version plus récente de rails par rapport au tutoriel. 
    Ainsi, j'utilise "assert_response" et "assert_select" au lieu de "response.should be_success"
    (ou de "expect(response).to have_http_status(:success)") et de "response.should have_selector(...)".
    De plus j'ai utilise une variable "@base_title", définie à l'aide de "def setup",
    plutôt que "before(:each) do", cette variable est utilisée en interpolation à la place d'une concaténation.

## Chapitre 4 :
	+ Fichier "example_user.rb" crée pour le chapitre 4, inutile au projet.

## Chapitre 5 :
	+ Format du logo jpg au lieu de png et définition d'une variable logo.
	+ Utilisation de la gem Bootstrap (boostrap-sass 3.3.6)
	+ Utilisation de la gem capybara et "require 'capybara/rails' config.include
			Capybara::DSL", ceci afin de pouvoir utiliser visit et have_title

## Chapitre 6 :
	+ Gem annotate-models n'existe pas, utilisation de la gem annotate_models (0.0.4),
	je n'ai pas réussi à utiliser 'annotate' dans le terminal.
    + Ajout d'un 'password' et création des test correspondants (taille et non vide)
    + Utilisation de la gem bcrypt pour le hash de mots de passe

Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.
